{"version":3,"file":"js/509.bcfa9f03.js","mappings":"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","sources":["webpack://client/./src/service/servicebiens/ResidenceService.js","webpack://client/./src/views/biens/Residence.vue","webpack://client/./src/views/biens/Residence.vue?90e0"],"sourcesContent":["import axios from 'axios';\nlet tokenjwt = localStorage.getItem('token');\n\nexport default class ResidenceService {\n\n  getResidence() {\n      let respo;\n      let tokenjwt = localStorage.getItem('token');\n      try {\n        const response =  axios.get(`${process.env.VUE_APP_HOST_BACKEND}/residence/getresidence`, {\n          headers: {\n            Authorization: `${tokenjwt}`,\n          },\n        });\n        respo=response;\n      } catch (error) {\n        console.error(error);\n      }\n      return respo;\n\n  }\n  saveResidence(residence) {  \n    let resp = {\n      type: null,\n      msg: null,\n      summary: null\n    }\n    let streets=[]\n    streets.push(residence?.rue1,residence?.rue2,residence?.rue3,residence?.rue4)\n\n    const request = axios.post(`${process.env.VUE_APP_HOST_BACKEND}/residence/add`, {\n      rname: residence.name,\n      rstreet: streets,\n    }, {\n      headers: {\n        Authorization: `${tokenjwt}`,\n      },\n    })\n    .then(response => {\n      if (response.data.success){\n        resp.type = \"success\";\n        resp.msg = \"Résidence ajoutée avec succès\";\n        resp.summary = \"Action Terminée\";\n      }\n      else{\n        resp.type = \"error\";\n        resp.msg = response.data.msg;\n        resp.summary = \"ERREUR\";\n      }\n      return resp;\n    })\n    .catch(error => {\n      alert('Wrong user account ' +error )\n      return resp;\n    });\n  \n    return request;\n  }\n  async updateResidence(residence) {\n    let resp = {\n      type: null,\n      msg: null,\n      summary: null\n    }    \n    let streets=[]\n    streets.push(residence?.rue1,residence?.rue2,residence?.rue3,residence?.rue4)\n\n    try {\n      const response = await axios.put(`${process.env.VUE_APP_HOST_BACKEND}/residence/update/${residence.Id}`, {\n        rname: residence.name,\n        rstreet: streets,\n      },{\n        headers: {\n          Authorization: `${tokenjwt}`,\n        }\n      });\n      if (response.data.success){\n        resp.type = \"success\";\n        resp.msg = \"Résidence ajoutée avec succès\";\n        resp.summary = \"Action Terminée\";\n      }\n      else{\n        resp.type = \"error\";\n        resp.msg = response.data.msg;\n        resp.summary = \"ERREUR\";\n      }\n      return resp;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async deleteResidence(id) {\n    let resp = {\n      type: null,\n      msg: null,\n      summary: null\n    }    \n    try {\n      const headers= {\n        Authorization: tokenjwt,\n      }\n      const response = await axios.delete(`${process.env.VUE_APP_HOST_BACKEND}/residence/delete/${id}`,{headers})\n      if (response.data.success){\n        resp.type = \"success\";\n        resp.msg = \"Résidence ajoutée avec succès\";\n        resp.summary = \"Action Terminée\";\n      }\n      else{\n        resp.type = \"error\";\n        resp.msg = response.data.msg;\n        resp.summary = \"ERREUR\";\n      }\n      return resp;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}\n","<script setup>\r\nimport { ref, onMounted,watchEffect } from 'vue';\r\nimport ResidenceService from '../../service/servicebiens/ResidenceService';\r\nimport { useToast } from 'primevue/usetoast';\r\n\r\nlet residencenametoremove=ref(\"\")\r\nlet residenceidtoremove=ref(null)\r\n\r\nconst toast = useToast();\r\nconst dt = ref(null);\r\nconst ResidencesData = ref(null);\r\nconst productDialog = ref(false);\r\nconst productDialogEdit = ref(false);\r\nconst deleteResidenceDialog = ref(false);\r\nconst Residenceadd = ref({});\r\nconst submitted = ref(false);\r\n\r\nconst NbrueValues = ref([\r\n    {id: 1, name: '1'},\r\n    {id: 2, name: '2'},\r\n    {id: 3, name: '3'},\r\n    {id: 4, name: '4'},\r\n]);\r\nconst NbrueDropDown = ref(null);\r\nlet Nbrue=ref(null)\r\n\r\nconst residenceservice = new ResidenceService();\r\n\r\nconst readResidence = async () => {\r\n    const response = await residenceservice.getResidence();\r\n    ResidencesData.value = response.data;\r\n};\r\nconst refreshComponent = ()=>{\r\n    const event = new Event('save-successful');\r\n    document.dispatchEvent(event);\r\n    readResidence();\r\n\r\n}\r\n\r\nconst openNew = () => {\r\n    Residenceadd.value = {};\r\n    submitted.value = false;\r\n    productDialog.value = true;\r\n};\r\n\r\n\r\nconst hideDialog = () => {\r\n    productDialogEdit.value = false;\r\n    productDialog.value = false;\r\n    Residenceadd.value=null\r\n    NbrueDropDown.value=null\r\n    submitted.value = false;\r\n};\r\nconst exportCSV = () => {\r\n    dt.value.exportCSV();\r\n};\r\nconst editResidence = (editResidence) => {\r\n    Residenceadd.value = { ...editResidence };\r\n    let notnullstreets=editResidence.streets.filter((street)=>street!=null)\r\n    Nbrue.value=notnullstreets.length\r\n    Residenceadd.value.rue1=notnullstreets[0]\r\n    Residenceadd.value.rue2=notnullstreets[1]\r\n    Residenceadd.value.rue3=notnullstreets[2]\r\n    Residenceadd.value.rue4=notnullstreets[3]\r\n    NbrueDropDown.value={id:notnullstreets.length ,name:`${notnullstreets.length}`}\r\n    productDialogEdit.value = true;\r\n    \r\n};\r\n\r\nconst confirmDeleteResidence =  (data) => {\r\n    residencenametoremove = data.name;\r\n    residenceidtoremove=data.Id\r\n    deleteResidenceDialog.value = true;\r\n};\r\nconst saveresidence = async () => {\r\n  submitted.value = true;\r\n  try {\r\n    const request = await residenceservice.saveResidence(Residenceadd.value);\r\n    toast.add({ severity: request.type, summary: request.summary, detail: request.msg, life: 3000 });\r\n    productDialog.value = false;\r\n    Residenceadd.value = {};\r\n    refreshComponent()\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nconst DeleteResidence = async () => {\r\n    const deleteresult= await residenceservice.deleteResidence(residenceidtoremove)\r\n    deleteResidenceDialog.value = false;\r\n    residencenametoremove = \"\";\r\n    residenceidtoremove=\"\"\r\n    toast.add({ severity: deleteresult.type, summary: deleteresult.summary, detail: deleteresult.msg, life: 3000 });\r\n    refreshComponent()\r\n\r\n};\r\nconst UpdateResidence = async () => {\r\n    const updateresult= await residenceservice.updateResidence(Residenceadd.value)\r\n    toast.add({ severity: updateresult.type, summary: updateresult.summary, detail: updateresult.msg, life: 3000 });\r\n    productDialogEdit.value = false;\r\n    refreshComponent()\r\n\r\n\r\n}\r\nconst changevalue=() =>    {\r\n    Nbrue.value=NbrueDropDown.value.id\r\n    if (Nbrue.value==1){\r\n        Residenceadd.value.rue2=null\r\n        Residenceadd.value.rue3=null\r\n        Residenceadd.value.rue4=null\r\n    }\r\n    if (Nbrue.value==2){\r\n        \r\n        Residenceadd.value.rue2=null\r\n        Residenceadd.value.rue3=null\r\n        Residenceadd.value.rue4=null\r\n    }\r\n    if (Nbrue.value==3){\r\n        Residenceadd.value.rue4=null\r\n    }\r\n\r\n}\r\n\r\nonMounted( () => {\r\n    readResidence()\r\n});\r\n</script>\r\n\r\n<template>\r\n    <div class=\"grid\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card\">\r\n                <Toast />\r\n                <Toolbar class=\"mb-4\">\r\n                    <template v-slot:start>\r\n                        <div class=\"my-2\">\r\n                            <Button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" @click=\"openNew\" />\r\n                        </div>\r\n                    </template>\r\n\r\n                    <template v-slot:end>\r\n                        <Button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\" />\r\n                    </template>\r\n                </Toolbar>\r\n                <DataTable\r\n                    ref=\"dt\"\r\n                    :value=\"ResidencesData\"\r\n                    dataKey=\"name\"\r\n                    :paginator=\"true\"\r\n                    :rows=\"10\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    :rowsPerPageOptions=\"[5, 10, 25]\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} Residences\"\r\n                    responsiveLayout=\"scroll\"\r\n                >\r\n                    <template #empty> Pas De  residence . </template>\r\n                    <template #loading> Loading  data. Please wait. </template>\r\n\r\n                    <Column field=\"name\" header=\"Nom Residence\"  headerStyle=\"width:5%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.name }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"streets\" header=\"Nb Rue\"  headerStyle=\"width:5%; min-width:10rem;\">\r\n                    <template #body=\"slotProps\">\r\n                        {{ (slotProps.data.streets.filter((street)=>street!=null)).length }}\r\n                    </template>\r\n                    </Column>\r\n                    <Column field=\"blocsCounter\" header=\"Nb Bloc\"  headerStyle=\"width:5%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.blocsCounter }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"etageCounter\" header=\"Nb Etage\"  headerStyle=\"width:5%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.etageCounter }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"LocalCounter\" header=\"Nb LC\" headerStyle=\"width:5%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.LocalCounter }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"appartementCounter\" header=\"Nb Appartement\"  headerStyle=\"width:5%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.appartementCounter }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column headerStyle=\"min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            <Button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" @click=\"editResidence(slotProps.data)\" />\r\n                            <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning mt-2\" @click=\"confirmDeleteResidence(slotProps.data)\" />\r\n                        </template>\r\n                    </Column>\r\n                </DataTable>\r\n               \r\n\r\n                <Dialog v-model:visible=\"productDialog\" :style=\"{ width: '450px' }\" header=\"Ajouter une residence\" :modal=\"true\" class=\"p-fluid\">\r\n                    <div class=\"field\">\r\n                        <label for=\"name\">Nom Residence</label>\r\n                        <InputText autocomplete=\"off\" id=\"name\" v-model.trim=\"Residenceadd.name\" required=\"true\" autofocus :class=\"{ 'p-invalid': submitted && !Residenceadd.name }\" />\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label for=\"name\">Nombre De rue</label>\r\n                        <Dropdown v-model=\"NbrueDropDown\" :options=\"NbrueValues\" optionLabel=\"name\" placeholder=\"Select\" @change=\"changevalue()\" />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>0\">\r\n                        <label > Nom Rue 1</label>\r\n                        <InputText  autocomplete=\"off\" v-model.trim=\"Residenceadd.rue1\" required=\"true\"  />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>=2\">\r\n                        <label > Nom Rue 2</label>\r\n                        <InputText  autocomplete=\"off\" v-model.trim=\"Residenceadd.rue2\" required=\"true\"  />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>=3\">\r\n                        <label > Nom Rue 3</label>\r\n                        <InputText  autocomplete=\"off\" v-model.trim=\"Residenceadd.rue3\" required=\"true\"  />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>=4\">\r\n                        <label > Nom Rue 4</label>\r\n                        <InputText  autocomplete=\"off\" v-model.trim=\"Residenceadd.rue4\" required=\"true\"  />\r\n                    </div>\r\n                    <template #footer>\r\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\" />\r\n                        <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveresidence\" :disabled=\"!Residenceadd.name || !Nbrue\"/>\r\n                    </template>\r\n                </Dialog>\r\n\r\n                <Dialog v-model:visible=\"productDialogEdit\" :style=\"{ width: '450px' }\" header=\"Modifier Residence\"  :modal=\"true\" class=\"p-fluid\">\r\n                    \r\n                    <div class=\"field\">\r\n                        <label for=\"name\">Nom Residence</label>\r\n                        <InputText autocomplete=\"off\" id=\"name\" v-model.trim=\"Residenceadd.name\" required=\"true\" autofocus :class=\"{ 'p-invalid': submitted && !Residenceadd.name }\" />\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label for=\"name\">Nombre De rue</label>\r\n                        <Dropdown v-model=\"NbrueDropDown\" :options=\"NbrueValues\" optionLabel=\"name\" placeholder=\"Select\" @change=\"changevalue()\" />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>0\">\r\n                        <label > Nom Rue 1</label>\r\n                        <InputText  autocomplete=\"off\" v-model.trim=\"Residenceadd.rue1\" required=\"true\"  />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>=2\">\r\n                        <label > Nom Rue 2</label>\r\n                        <InputText  autocomplete=\"off\" v-model.trim=\"Residenceadd.rue2\" required=\"true\"  />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>=3\">\r\n                        <label > Nom Rue 3</label>\r\n                        <InputText autocomplete=\"off\" v-model.trim=\"Residenceadd.rue3\" required=\"true\"  />\r\n                    </div>\r\n                    <div class=\"field\" v-if=\"Nbrue>=4\">\r\n                        <label > Nom Rue 4</label>\r\n                        <InputText autocomplete=\"off\" v-model.trim=\"Residenceadd.rue4\" required=\"true\"  />\r\n                    </div>\r\n\r\n                    <template #footer>\r\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\" />\r\n                        <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"UpdateResidence()\" />\r\n                    </template>\r\n\r\n                </Dialog>\r\n                <Dialog v-model:visible=\"deleteResidenceDialog\" :style=\"{ width: '450px' }\" header=\"Confirm\" :modal=\"true\">\r\n                    <div class=\"flex align-items-center justify-content-center\">\r\n                        <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\" />\r\n                        <span v-if=\"Residenceadd\">etes vous sur de suprimer  <b>{{ residencenametoremove }}</b>? cette action va suprimer tous les blocs ainsi que vos etages et biens  </span>\r\n                    </div>\r\n\r\n                    <template #footer>\r\n                        <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteResidenceDialog = false\" />\r\n                        <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"DeleteResidence()\" />\r\n                    </template>\r\n                </Dialog>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n","import script from \"./Residence.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Residence.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["tokenjwt","localStorage","getItem","ResidenceService","getResidence","respo","response","axios","headers","Authorization","error","console","saveResidence","residence","resp","type","msg","summary","streets","push","rue1","rue2","rue3","rue4","request","rname","name","rstreet","then","data","success","catch","alert","async","Id","id","residencenametoremove","residenceidtoremove","toast","dt","ResidencesData","productDialog","productDialogEdit","deleteResidenceDialog","Residenceadd","submitted","NbrueValues","NbrueDropDown","Nbrue","residenceservice","readResidence","value","refreshComponent","event","Event","document","dispatchEvent","openNew","hideDialog","exportCSV","editResidence","notnullstreets","filter","street","length","confirmDeleteResidence","saveresidence","add","severity","detail","life","log","DeleteResidence","deleteresult","deleteResidence","UpdateResidence","updateresult","updateResidence","changevalue","__exports__"],"sourceRoot":""}