{"version":3,"file":"js/841.d31e4ed4.js","mappings":"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","sources":["webpack://client/./src/service/servicebiens/BlocService.js","webpack://client/./src/views/biens/Blocs.vue","webpack://client/./src/views/biens/Blocs.vue?eb41"],"sourcesContent":["import axios from 'axios';\nlet tokenjwt = localStorage.getItem('token');\n\nexport default class BlocService {\n\n    getBloc(residenceId) {\n     \n        let respo;\n        let tokenjwt = localStorage.getItem('token');\n        try {\n          const response =  axios.get(`${process.env.VUE_APP_HOST_BACKEND}/bloc/Getblocs/${residenceId}`, {\n            headers: {\n              Authorization: `${tokenjwt}`,\n            },\n          });\n          respo=response;\n        } catch (error) {\n          console.error(error);\n        }\n       \n        return respo;\n\n  }\n  saveBloc(Bloc,residence) {  \n    let resp = {\n      type: null,\n      msg: null,\n      summary: null\n    }\n    const request = axios.post(`${process.env.VUE_APP_HOST_BACKEND}/Bloc/add`, {\n      idres: residence,\n      bname: Bloc.name,\n    }, {\n      headers: {\n        Authorization: `${tokenjwt}`,\n      },\n    })\n    .then(response => {\n      if (response.data.success){\n        resp.type = \"success\";\n        resp.msg = \"Résidence ajoutée avec succès\";\n        resp.summary = \"Action Terminée\";\n      }\n      else{\n        resp.type = \"error\";\n        resp.msg = response.data.msg;\n        resp.summary = \"ERREUR\";\n      }\n      return resp;\n    })\n    .catch(error => {\n      alert('Wrong user account ' +error )\n      return resp;\n    });\n  \n    return request;\n  }\n  async updateBloc(bloc,residence) {\n    let resp = {\n      type: null,\n      msg: null,\n      summary: null\n    }    \n    try {\n      const response = await axios.put(`${process.env.VUE_APP_HOST_BACKEND}/bloc/update/${residence}/`, {\n        blocNameupdate: bloc.blocName,\n        blocId: bloc.blocId,\n      },{\n        headers: {\n          Authorization: `${tokenjwt}`,\n        }\n      });\n      if (response.data.success){\n        resp.type = \"success\";\n        resp.msg = \"Bloc ajoutée avec succès\";\n        resp.summary = \"Action Terminée\";\n      }\n      else{\n        resp.type = \"error\";\n        resp.msg = response.data.msg;\n        resp.summary = \"ERREUR\";\n      }\n      return resp;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async deleteBloc(blocId,residenceId) {\n    let resp = {\n      type: null,\n      msg: null,\n      summary: null\n    }    \n    try {\n      const response = await axios.delete(`${process.env.VUE_APP_HOST_BACKEND}/bloc/delete/${residenceId}/${blocId}`,{\n        headers: {\n          Authorization: `${tokenjwt}`,\n        }\n      });\n      if (response.data.success){\n        resp.type = \"success\";\n        resp.msg = \"Bloc supprimé avec succès\";\n        resp.summary = \"Action Terminée\";\n      }\n      else{\n        resp.type = \"error\";\n        resp.msg = response.data.msg;\n        resp.summary = \"ERREUR\";\n      }\n      return resp;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","<script setup>\r\nimport { ref, onMounted,watchEffect } from 'vue';\r\nimport BlocService from '../../service/servicebiens/BlocService';\r\nimport { useToast } from 'primevue/usetoast';\r\n\r\nimport { useRoute } from 'vue-router';\r\nconst name=ref(\"\")\r\nconst route = useRoute();  \r\nconst toast = useToast();\r\nconst dt = ref(null);\r\nconst BlocsData = ref(null);\r\nconst BlocaddDialog = ref(false);\r\nconst deleteblocDialog = ref(false);\r\nconst BloceditDialog = ref(false);\r\nconst Blocadd = ref({});\r\nconst submitted = ref(false);\r\nconst blocservice = new BlocService();\r\nconst Residenceid = route.params.id;\r\n\r\nlet  blocidtoremove=ref(\"\")\r\nlet  blocnametoremove=ref(\"\")\r\n\r\nconst refreshComponent = ()=>{\r\n    readResidence(Residenceid);\r\n}\r\nconst readResidence = async (id) => {\r\n    const response = await blocservice.getBloc(id);\r\n    BlocsData.value = response.data;\r\n};\r\n\r\nconst openNew = () => {\r\n    Blocadd.value = {};\r\n    submitted.value = false;\r\n    BlocaddDialog.value = true;\r\n};\r\nconst hideDialog = () => {\r\n    BlocaddDialog.value = false;\r\n    BloceditDialog.value = false;\r\n    submitted.value = false;\r\n};\r\nconst exportCSV = () => {\r\n    dt.value.exportCSV();\r\n};\r\n\r\nconst saveProduct = async () => {\r\n    submitted.value = true;\r\n    try {\r\n        const request = await blocservice.saveBloc(Blocadd.value,Residenceid);\r\n        toast.add({ severity: request.type, summary: request.summary, detail: request.msg, life: 3000 });\r\n        BlocaddDialog.value = false;\r\n        Blocadd.value = {};\r\n        refreshComponent()\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nconst editBloc = (editBloc) => {\r\n    Blocadd.value = { ...editBloc };\r\n    BloceditDialog.value = true;\r\n    \r\n};\r\nconst UpdateBloc = async ()=>{\r\n\r\n    const request = await blocservice.updateBloc(Blocadd.value,Residenceid)\r\n    toast.add({ severity: request.type, summary: request.summary, detail: request.msg, life: 3000 });\r\n    BloceditDialog.value = false;\r\n    Blocadd.value = {};\r\n    refreshComponent()\r\n\r\n}\r\nconst confirmDeleteBloc =  (data) => {\r\n    blocnametoremove = data.name;\r\n    blocidtoremove=data.blocId\r\n    deleteblocDialog.value = true;\r\n};\r\nconst deleteBloc = async ()=>{\r\n    const deleteresult= await blocservice.deleteBloc(blocidtoremove,Residenceid)\r\n    deleteblocDialog.value = false;\r\n    blocnametoremove = \"\";\r\n    blocidtoremove=\"\"\r\n    toast.add({ severity: deleteresult.type, summary: deleteresult.summary, detail: deleteresult.msg, life: 3000 });\r\n    refreshComponent()\r\n}\r\nwatchEffect(() => {\r\n    if (route.name == \"blocs\") {\r\n        readResidence(route.params.id)\r\n    }\r\n});\r\nonMounted( async () => {\r\n    readResidence(Residenceid)\r\n});\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"grid\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card\">\r\n                <Toast />\r\n                <Toolbar class=\"mb-4\">\r\n                    <template v-slot:start>\r\n                        <div class=\"my-2\">\r\n                            <Button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" @click=\"openNew\" />\r\n                        </div>\r\n                    </template>\r\n                    \r\n                    <template v-slot:end>\r\n                        <Button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\" />\r\n                    </template>\r\n                </Toolbar>\r\n                <DataTable\r\n                    :value=\"BlocsData\"\r\n                    dataKey=\"name\"\r\n                    :paginator=\"true\"\r\n                    :rows=\"10\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    :rowsPerPageOptions=\"[5, 10, 25]\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} Residences\"\r\n                    responsiveLayout=\"scroll\"\r\n                >   \r\n                \r\n                    <template #empty> Pas De blocs dans cette residence . </template>\r\n                    <template #loading> Loading  data. Please wait. </template>\r\n\r\n                    <Column field=\"blocName\" header=\"Nom Bloc\"  headerStyle=\"width:5%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.blocName }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"etageCounter\" header=\"Nb Etage\"  headerStyle=\"width:20%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.etageCounter }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"LocalCounter\" header=\"Nb LC\" headerStyle=\"width:20%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.LocalCounter }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column field=\"appartementCounter\" header=\"Nb Appartement\"  headerStyle=\"width:25%; min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            {{ slotProps.data.appartementCounter }}\r\n                        </template>\r\n                    </Column>\r\n                    <Column headerStyle=\"min-width:10rem;\">\r\n                        <template #body=\"slotProps\">\r\n                            <Button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" @click=\"editBloc(slotProps.data)\" />\r\n                            <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning mt-2\" @click=\"confirmDeleteBloc(slotProps.data)\" />\r\n\r\n                        </template>\r\n                    </Column>\r\n                </DataTable>\r\n               \r\n                <Dialog v-model:visible=\"BlocaddDialog\" :style=\"{ width: '450px' }\" header=\"Ajouter un Bloc\" :modal=\"true\" class=\"p-fluid\">\r\n                    <div class=\"field\">\r\n                        <label for=\"name\">Nom Bloc</label>\r\n                        <InputText autocomplete=\"off\" id=\"name\" v-model.trim=\"Blocadd.name\" required=\"true\"  />\r\n                    </div>\r\n                   \r\n                    <template #footer>\r\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\" />\r\n                        <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveProduct\" :disabled=\"!Blocadd.name \"/>\r\n                    </template>\r\n                </Dialog>\r\n\r\n                <Dialog v-model:visible=\"BloceditDialog\" :style=\"{ width: '450px' }\" header=\"Modifier un bloc\" :modal=\"true\" class=\"p-fluid\">\r\n                    <div class=\"field\">\r\n                        <label for=\"name\">Nom Bloc</label>\r\n                        <InputText autocomplete=\"off\" id=\"name\" v-model.trim=\"Blocadd.blocName\" required=\"true\"  />\r\n                    </div>\r\n                   \r\n                    <template #footer>\r\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\" />\r\n                        <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"UpdateBloc\" />\r\n                    </template>\r\n                </Dialog>\r\n\r\n                <Dialog v-model:visible=\"deleteblocDialog\" :style=\"{ width: '450px' }\" header=\"Confirm\" :modal=\"true\">\r\n                    <div class=\"flex align-items-center justify-content-center\">\r\n                        <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\" />\r\n                        <span v-if=\"Blocadd\">\r\n                            etes vous sur de suprimer  <b>{{ Blocadd.name }}</b>? cette action va suprimer tous les etages ainsi que vos biens\r\n                        </span>\r\n                    </div>\r\n                    <template #footer>\r\n                        <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteblocDialog = false\" />\r\n                        <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteBloc\" />\r\n                    </template>\r\n                </Dialog>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n","import script from \"./Blocs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Blocs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["tokenjwt","localStorage","getItem","BlocService","getBloc","residenceId","respo","response","axios","headers","Authorization","error","console","saveBloc","Bloc","residence","resp","type","msg","summary","request","idres","bname","name","then","data","success","catch","alert","async","bloc","blocNameupdate","blocName","blocId","route","toast","dt","BlocsData","BlocaddDialog","deleteblocDialog","BloceditDialog","Blocadd","submitted","blocservice","Residenceid","params","id","blocidtoremove","blocnametoremove","refreshComponent","readResidence","value","openNew","hideDialog","exportCSV","saveProduct","add","severity","detail","life","log","editBloc","UpdateBloc","updateBloc","confirmDeleteBloc","deleteBloc","deleteresult","__exports__"],"sourceRoot":""}